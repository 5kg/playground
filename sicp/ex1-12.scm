(define (pascal-triangle n)
  (define (compute-item r c)
    (cond ((= c 0) 1)
          ((> c r) 0)
          (else (+ (compute-item (- r 1) c)
                   (compute-item (- r 1) (- c 1))))))
  (define (pascal-triangle-iter r c)
    (display (compute-item r c))
    (cond ((< c r)
            (display " ")
            (pascal-triangle-iter r (+ c 1)))
          (else
            (newline)
            (if (< r n)
                    (pascal-triangle-iter (+ r 1) 0)))))
  (pascal-triangle-iter 0 0))
